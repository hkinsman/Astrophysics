%!PS-Adobe-2.0 EPSF-2.0
%%Title: Graph1.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Mar 10 14:32:10 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Graph1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (LJMU Astrophysics v2.3DL 2015/16)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 10 14:32:10 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1337 511 M
-63 0 V
stroke
1190 511 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857367)]
] -46.7 MRshow
1.000 UL
LTb
1337 1134 M
-63 0 V
stroke
1190 1134 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857367)]
] -46.7 MRshow
1.000 UL
LTb
1337 1757 M
-63 0 V
stroke
1190 1757 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857367)]
] -46.7 MRshow
1.000 UL
LTb
1337 2380 M
-63 0 V
stroke
1190 2380 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857367)]
] -46.7 MRshow
1.000 UL
LTb
1337 3003 M
-63 0 V
stroke
1190 3003 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857367)]
] -46.7 MRshow
1.000 UL
LTb
1337 3626 M
-63 0 V
stroke
1190 3626 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857366)]
] -46.7 MRshow
1.000 UL
LTb
1337 4249 M
-63 0 V
stroke
1190 4249 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857366)]
] -46.7 MRshow
1.000 UL
LTb
1337 4872 M
-63 0 V
stroke
1190 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.857366)]
] -46.7 MRshow
1.000 UL
LTb
1337 511 M
0 -63 V
stroke
1337 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2750 511 M
0 -63 V
stroke
2750 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
4164 511 M
0 -63 V
stroke
4164 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
5577 511 M
0 -63 V
stroke
5577 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1337 4872 N
0 -4361 V
5653 0 V
0 4361 V
-5653 0 V
Z stroke
LCb setrgbcolor
280 2691 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Jacobi Integral)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4163 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
1337 2754 Pls
1338 2754 Pls
1339 2380 Pls
1339 2754 Pls
1340 2380 Pls
1342 3128 Pls
1343 2006 Pls
1346 2006 Pls
1349 2380 Pls
1352 2006 Pls
1355 1632 Pls
1359 2006 Pls
1363 1445 Pls
1367 1445 Pls
1372 1072 Pls
1377 1259 Pls
1382 1259 Pls
1388 1819 Pls
1394 2006 Pls
1399 2006 Pls
1405 2380 Pls
1412 2193 Pls
1418 2006 Pls
1423 2006 Pls
1429 2380 Pls
1436 2380 Pls
1445 2380 Pls
1455 2380 Pls
1467 2380 Pls
1481 2380 Pls
1496 2193 Pls
1509 2193 Pls
1521 2380 Pls
1532 2380 Pls
1541 2380 Pls
1549 2380 Pls
1558 2380 Pls
1568 2193 Pls
1579 2380 Pls
1590 2380 Pls
1603 2380 Pls
1614 2380 Pls
1623 2567 Pls
1630 2006 Pls
1636 2006 Pls
1642 2193 Pls
1648 2006 Pls
1653 2380 Pls
1659 2193 Pls
1665 2006 Pls
1671 2006 Pls
1676 2193 Pls
1682 2006 Pls
1687 2193 Pls
1691 2380 Pls
1694 2380 Pls
1698 2754 Pls
1701 2754 Pls
1704 3501 Pls
1707 3128 Pls
1710 3501 Pls
1712 3501 Pls
1714 3128 Pls
1716 3501 Pls
1718 4249 Pls
1720 3501 Pls
1723 3501 Pls
1726 3875 Pls
1730 3501 Pls
1733 3501 Pls
1736 3128 Pls
1740 3128 Pls
1745 3314 Pls
1750 3314 Pls
1755 3314 Pls
1760 3501 Pls
1765 3501 Pls
1770 3501 Pls
1776 3688 Pls
1782 3688 Pls
1787 3875 Pls
1792 3688 Pls
1798 3875 Pls
1805 3688 Pls
1813 3688 Pls
1822 3875 Pls
1833 3688 Pls
1848 3688 Pls
1861 3875 Pls
1875 3688 Pls
1888 3688 Pls
1900 3688 Pls
1912 3688 Pls
1920 3875 Pls
1929 3688 Pls
1938 3875 Pls
1948 3688 Pls
1958 3875 Pls
1970 3688 Pls
1984 3688 Pls
1994 3501 Pls
2002 3128 Pls
2009 3501 Pls
2015 3314 Pls
2020 3501 Pls
2026 3688 Pls
2031 3875 Pls
2037 3688 Pls
2042 3501 Pls
2048 3688 Pls
2053 3688 Pls
2058 3688 Pls
2063 3875 Pls
2066 4249 Pls
2069 3501 Pls
2073 3501 Pls
2076 2754 Pls
2079 3128 Pls
2082 2754 Pls
2084 2754 Pls
2086 3501 Pls
2088 3128 Pls
2090 3128 Pls
2092 3501 Pls
2094 3501 Pls
2097 3501 Pls
2100 3128 Pls
2103 3501 Pls
2106 3875 Pls
2109 3501 Pls
2113 3501 Pls
2118 3875 Pls
2123 3688 Pls
2128 3875 Pls
2132 3688 Pls
2138 3688 Pls
2143 3314 Pls
2148 3875 Pls
2154 3501 Pls
2159 3875 Pls
2164 3875 Pls
2170 3875 Pls
2177 4062 Pls
2185 4062 Pls
2194 3875 Pls
2206 3688 Pls
2221 3875 Pls
2234 3875 Pls
2247 3688 Pls
2260 3875 Pls
2271 3875 Pls
2280 3688 Pls
2288 3688 Pls
2297 3688 Pls
2307 3875 Pls
2318 3688 Pls
2330 3688 Pls
2343 3688 Pls
2357 3688 Pls
2367 3501 Pls
2376 3501 Pls
2383 3875 Pls
2389 3688 Pls
2394 3314 Pls
2399 3501 Pls
2403 3314 Pls
2408 3501 Pls
2414 3501 Pls
2419 3501 Pls
2424 3314 Pls
2428 3314 Pls
2433 3128 Pls
2437 3128 Pls
2440 3128 Pls
2443 3128 Pls
2446 3128 Pls
2449 3875 Pls
2452 3128 Pls
2455 3501 Pls
2457 3128 Pls
2459 3501 Pls
2461 3128 Pls
2463 3128 Pls
2465 3128 Pls
2468 3128 Pls
2471 3128 Pls
2474 2754 Pls
2477 3128 Pls
2480 3501 Pls
2484 3128 Pls
2489 2567 Pls
2493 3128 Pls
2498 2941 Pls
2503 2941 Pls
2509 2941 Pls
2514 2754 Pls
2520 2941 Pls
2526 3128 Pls
2532 2754 Pls
2538 2567 Pls
2543 2754 Pls
2549 2567 Pls
2557 2941 Pls
2566 2941 Pls
2576 2941 Pls
2591 2941 Pls
2603 2754 Pls
2615 2754 Pls
2627 2754 Pls
2636 2941 Pls
2645 2941 Pls
2654 2941 Pls
2664 2941 Pls
2675 2754 Pls
2686 2754 Pls
2698 2754 Pls
2711 2567 Pls
2726 2754 Pls
2737 2754 Pls
2746 2754 Pls
2753 2380 Pls
2760 2754 Pls
2765 2754 Pls
2770 2754 Pls
2775 2754 Pls
2780 2941 Pls
2785 2754 Pls
2790 2567 Pls
2795 2754 Pls
2800 2380 Pls
2805 2380 Pls
2809 2380 Pls
2812 2380 Pls
2816 2754 Pls
2819 2380 Pls
2822 2754 Pls
2825 2006 Pls
2828 2380 Pls
2830 3128 Pls
2832 2754 Pls
2834 3501 Pls
2836 3501 Pls
2839 3128 Pls
2842 3875 Pls
2845 2754 Pls
2848 3501 Pls
2851 3875 Pls
2855 3501 Pls
2859 3501 Pls
2864 3501 Pls
2869 3501 Pls
2875 3688 Pls
2880 3501 Pls
2886 3688 Pls
2891 4062 Pls
2897 3875 Pls
2904 4062 Pls
2910 4249 Pls
2916 4249 Pls
2922 4062 Pls
2928 3875 Pls
2936 4062 Pls
2945 4249 Pls
2957 4062 Pls
2970 4062 Pls
2982 4062 Pls
2994 3875 Pls
3006 4062 Pls
3014 4062 Pls
3023 3875 Pls
3032 3875 Pls
3042 3875 Pls
3052 4062 Pls
3064 4062 Pls
3076 3875 Pls
3089 3875 Pls
3102 3875 Pls
3112 4249 Pls
3120 4249 Pls
3127 4062 Pls
3133 3875 Pls
3139 4062 Pls
3144 3688 Pls
3150 3875 Pls
3155 3688 Pls
3161 3688 Pls
3167 3688 Pls
3172 3501 Pls
3177 3688 Pls
3182 3688 Pls
3185 3501 Pls
3189 3501 Pls
3192 3501 Pls
3196 3501 Pls
3199 3128 Pls
3202 3128 Pls
3205 3501 Pls
3207 2754 Pls
3209 3501 Pls
3211 3128 Pls
3214 3128 Pls
3217 3128 Pls
3220 3128 Pls
3223 3128 Pls
3227 3128 Pls
3230 2941 Pls
3234 2941 Pls
3239 2754 Pls
3244 3501 Pls
3249 3501 Pls
3255 3501 Pls
3260 3688 Pls
3266 3875 Pls
3272 3875 Pls
3278 3875 Pls
3284 3875 Pls
3290 3875 Pls
3296 3688 Pls
3302 3688 Pls
3310 3688 Pls
3319 3875 Pls
3330 3875 Pls
3345 3688 Pls
3358 3688 Pls
3372 3688 Pls
3384 3501 Pls
3396 3688 Pls
3405 3501 Pls
3414 3688 Pls
3423 3688 Pls
3433 3688 Pls
3443 3688 Pls
3454 3875 Pls
3467 3875 Pls
3479 4062 Pls
3488 4249 Pls
3496 3875 Pls
3503 3688 Pls
3508 3688 Pls
3514 3688 Pls
3519 3875 Pls
3525 4249 Pls
3531 4062 Pls
3537 4062 Pls
3543 4062 Pls
3548 4249 Pls
3553 4249 Pls
3558 4436 Pls
3562 3875 Pls
3565 3875 Pls
3569 3875 Pls
3572 3875 Pls
3575 3875 Pls
3578 4249 Pls
3581 3501 Pls
3583 3875 Pls
3585 2754 Pls
3587 3501 Pls
3589 3128 Pls
3592 3128 Pls
3595 4249 Pls
3598 3875 Pls
3601 3501 Pls
3605 3128 Pls
3608 3688 Pls
3613 3501 Pls
3618 3875 Pls
3623 3688 Pls
3628 4249 Pls
3633 4249 Pls
3638 3875 Pls
3644 3875 Pls
3650 3875 Pls
3655 3875 Pls
3661 3875 Pls
3666 3875 Pls
3673 3688 Pls
3680 3688 Pls
3689 3688 Pls
3700 3688 Pls
3713 3875 Pls
3727 3875 Pls
3741 3875 Pls
3754 3875 Pls
3767 3688 Pls
3778 3688 Pls
3787 3875 Pls
3796 3875 Pls
3805 3875 Pls
3815 3688 Pls
3826 3688 Pls
3838 3875 Pls
3850 3875 Pls
3861 3875 Pls
3870 3875 Pls
3877 3501 Pls
3883 3501 Pls
3889 3875 Pls
3894 3688 Pls
3899 3875 Pls
3905 3688 Pls
3911 3875 Pls
3916 3501 Pls
3921 3501 Pls
3926 3314 Pls
3931 3875 Pls
3935 3875 Pls
3938 3875 Pls
3941 3501 Pls
3944 3501 Pls
3947 3875 Pls
3950 4249 Pls
3953 4249 Pls
3955 4249 Pls
3957 3875 Pls
3959 3875 Pls
3960 4249 Pls
3963 3875 Pls
3966 3128 Pls
3969 3875 Pls
3972 3501 Pls
3975 3128 Pls
3978 2754 Pls
3982 3128 Pls
3987 3128 Pls
3991 2941 Pls
3996 2754 Pls
4001 2941 Pls
4006 2941 Pls
4012 2754 Pls
4017 2754 Pls
4023 2754 Pls
4028 2941 Pls
4033 2754 Pls
4039 2941 Pls
4045 3128 Pls
4053 3128 Pls
4062 2754 Pls
4074 2941 Pls
4089 2941 Pls
4102 3314 Pls
4115 3128 Pls
4127 3128 Pls
4139 3128 Pls
4148 3128 Pls
4157 3128 Pls
4166 3128 Pls
4176 3314 Pls
4187 3314 Pls
4198 3314 Pls
4211 3128 Pls
4225 3314 Pls
4235 3501 Pls
4244 3501 Pls
4252 3314 Pls
4258 3501 Pls
4262 3314 Pls
4267 3314 Pls
4272 3314 Pls
4277 3314 Pls
4282 3314 Pls
4288 3688 Pls
4293 3688 Pls
4297 3688 Pls
4302 3875 Pls
4306 3875 Pls
4309 3875 Pls
4312 4249 Pls
4315 4249 Pls
4318 4249 Pls
4321 4249 Pls
4324 4592 Pls
4326 3875 Pls
4328 4249 Pls
4330 4249 Pls
4332 3875 Pls
4334 3875 Pls
4337 4249 Pls
4340 3875 Pls
4343 4249 Pls
4346 3875 Pls
4349 3875 Pls
4353 4062 Pls
4358 3875 Pls
4362 4062 Pls
4367 3875 Pls
4372 3875 Pls
4378 3501 Pls
4383 3688 Pls
4389 3688 Pls
4395 3688 Pls
4400 3875 Pls
4406 4062 Pls
4411 3501 Pls
4418 3501 Pls
4425 3688 Pls
4434 3875 Pls
4444 3875 Pls
4458 3688 Pls
4470 3875 Pls
4483 3875 Pls
4495 3688 Pls
4504 3875 Pls
4514 3501 Pls
4522 3688 Pls
4532 3688 Pls
4543 3688 Pls
4554 3688 Pls
4566 3688 Pls
4579 3501 Pls
4593 3875 Pls
4605 3875 Pls
4614 3501 Pls
4622 3688 Pls
4628 3875 Pls
4633 3688 Pls
4638 3875 Pls
4643 3875 Pls
4649 3501 Pls
4654 3501 Pls
4659 3688 Pls
4664 3501 Pls
4669 3501 Pls
4674 3314 Pls
4678 3128 Pls
4681 3128 Pls
4685 3128 Pls
4688 3128 Pls
4691 3128 Pls
4694 2754 Pls
4697 2754 Pls
4699 2754 Pls
4701 2006 Pls
4703 2006 Pls
4705 2006 Pls
4708 2754 Pls
4711 2006 Pls
4714 2006 Pls
4717 2006 Pls
4720 2380 Pls
4724 1632 Pls
4728 1819 Pls
4733 1632 Pls
4738 1445 Pls
4743 1445 Pls
4749 1632 Pls
4754 1632 Pls
4760 1445 Pls
4766 1632 Pls
4772 1632 Pls
4779 1259 Pls
4785 1445 Pls
4791 1445 Pls
4797 1632 Pls
4805 1445 Pls
4814 1632 Pls
4825 1632 Pls
4838 1445 Pls
4851 1632 Pls
4863 1445 Pls
4874 1632 Pls
4883 1445 Pls
4892 1445 Pls
4900 1445 Pls
4910 1632 Pls
4921 1445 Pls
4932 1632 Pls
4945 1632 Pls
4958 1632 Pls
4971 1632 Pls
4981 1445 Pls
4989 1632 Pls
4996 1819 Pls
5002 1632 Pls
5008 1632 Pls
5013 1259 Pls
5019 1259 Pls
5025 1632 Pls
5030 1072 Pls
5036 1259 Pls
5041 1445 Pls
5046 1445 Pls
5051 1259 Pls
5054 1632 Pls
5058 1632 Pls
5061 2006 Pls
5065 1632 Pls
5068 2006 Pls
5071 1632 Pls
5074 1632 Pls
5076 1632 Pls
5078 2006 Pls
5080 2006 Pls
5082 1632 Pls
5086 1632 Pls
5089 885 Pls
5092 1632 Pls
5096 1632 Pls
5099 1259 Pls
5103 1632 Pls
5108 1632 Pls
5113 1632 Pls
5118 2006 Pls
5124 1632 Pls
5129 1819 Pls
5135 2006 Pls
5141 2006 Pls
5147 2006 Pls
5153 2006 Pls
5159 2006 Pls
5165 2006 Pls
5171 2006 Pls
5179 2193 Pls
5188 2006 Pls
5199 2006 Pls
5214 2006 Pls
5227 2006 Pls
5240 1819 Pls
5253 2006 Pls
5264 1819 Pls
5273 2006 Pls
5283 2006 Pls
5291 2006 Pls
5301 2006 Pls
5312 2006 Pls
5323 2006 Pls
5335 2006 Pls
5348 1819 Pls
5357 2380 Pls
5365 2006 Pls
5372 2193 Pls
5377 2193 Pls
5383 1819 Pls
5388 2380 Pls
5394 2380 Pls
5400 2193 Pls
5406 2006 Pls
5412 2193 Pls
5417 2006 Pls
5422 2006 Pls
5427 2006 Pls
5431 2006 Pls
5434 2006 Pls
5438 2380 Pls
5441 2380 Pls
5444 2006 Pls
5448 2380 Pls
5450 2754 Pls
5452 2754 Pls
5454 2754 Pls
5456 3128 Pls
5458 3501 Pls
5461 2754 Pls
5464 3128 Pls
5467 2380 Pls
5470 2754 Pls
5474 2754 Pls
5478 2380 Pls
5482 2193 Pls
5487 2380 Pls
5492 2193 Pls
5497 2193 Pls
5502 2380 Pls
5508 2193 Pls
5513 2380 Pls
5519 2006 Pls
5525 2754 Pls
5530 2380 Pls
5536 2380 Pls
5542 2380 Pls
5550 2380 Pls
5559 2380 Pls
5570 2380 Pls
5583 2193 Pls
5597 2380 Pls
5611 2380 Pls
5624 2380 Pls
5636 2193 Pls
5648 2193 Pls
5657 2380 Pls
5666 2193 Pls
5675 2193 Pls
5684 2193 Pls
5695 2193 Pls
5707 2193 Pls
5720 2006 Pls
5730 2006 Pls
5739 2006 Pls
5746 1632 Pls
5752 1819 Pls
5758 2006 Pls
5763 1819 Pls
5768 2006 Pls
5774 1819 Pls
5780 2193 Pls
5785 2006 Pls
5790 2193 Pls
5795 2380 Pls
5800 2193 Pls
5804 2380 Pls
5807 3128 Pls
5810 2380 Pls
5813 1632 Pls
5816 2754 Pls
5819 2754 Pls
5822 2006 Pls
5824 1632 Pls
5826 1632 Pls
5828 1632 Pls
5830 1632 Pls
5832 1259 Pls
5835 2006 Pls
5838 1632 Pls
5841 1632 Pls
5844 1632 Pls
5847 1259 Pls
5851 1632 Pls
5856 1819 Pls
5860 2193 Pls
5865 2193 Pls
5870 1819 Pls
5875 2006 Pls
5881 1819 Pls
5886 1632 Pls
5892 1819 Pls
5897 1632 Pls
5902 1445 Pls
5908 1445 Pls
5914 1632 Pls
5922 1259 Pls
5931 1072 Pls
5942 1259 Pls
5957 1259 Pls
5971 1072 Pls
5984 1259 Pls
5996 1259 Pls
6008 1445 Pls
6017 1259 Pls
6027 1632 Pls
6035 1445 Pls
6045 1632 Pls
6056 1445 Pls
6068 1445 Pls
6080 1632 Pls
6094 1632 Pls
6105 1632 Pls
6113 1632 Pls
6121 1632 Pls
6127 1632 Pls
6132 1819 Pls
6136 1632 Pls
6141 2006 Pls
6146 2006 Pls
6152 2006 Pls
6157 2006 Pls
6162 2380 Pls
6167 1819 Pls
6171 2380 Pls
6175 2380 Pls
6178 2006 Pls
6181 2380 Pls
6185 2006 Pls
6188 2006 Pls
6190 2380 Pls
6193 2380 Pls
6195 2754 Pls
6197 2006 Pls
6199 2006 Pls
6201 2380 Pls
6203 1632 Pls
6206 2006 Pls
6209 2006 Pls
6212 2006 Pls
6215 2006 Pls
6218 2380 Pls
6222 2380 Pls
6227 2567 Pls
6232 2567 Pls
6236 2567 Pls
6241 2754 Pls
6247 3128 Pls
6252 3128 Pls
6258 2941 Pls
6264 2941 Pls
6269 2941 Pls
6275 2754 Pls
6280 2380 Pls
6287 2754 Pls
6294 2754 Pls
6303 2754 Pls
6313 2754 Pls
6327 2567 Pls
6339 2754 Pls
6352 2754 Pls
6364 2754 Pls
6373 2754 Pls
6383 2567 Pls
6392 2567 Pls
6401 2754 Pls
6412 2754 Pls
6423 2567 Pls
6435 2567 Pls
6448 2754 Pls
6462 2567 Pls
6474 2754 Pls
6483 2567 Pls
6491 2754 Pls
6497 2941 Pls
6503 2754 Pls
6508 2567 Pls
6513 2941 Pls
6518 2754 Pls
6523 2754 Pls
6528 2941 Pls
6533 2754 Pls
6538 2941 Pls
6543 2380 Pls
6547 2754 Pls
6550 2754 Pls
6554 3128 Pls
6557 2006 Pls
6560 2380 Pls
6564 2754 Pls
6566 2006 Pls
6568 2006 Pls
6570 2006 Pls
6572 1259 Pls
6574 1632 Pls
6577 1259 Pls
6580 1632 Pls
6583 885 Pls
6586 1259 Pls
6589 1259 Pls
6593 1072 Pls
6597 1259 Pls
6602 1259 Pls
6607 1259 Pls
6612 1259 Pls
6617 1445 Pls
6623 2006 Pls
6629 1632 Pls
6635 1259 Pls
6641 1632 Pls
6647 1632 Pls
6654 1632 Pls
6659 1819 Pls
6666 1819 Pls
6673 1632 Pls
6682 2006 Pls
6694 1632 Pls
6707 1819 Pls
6719 1819 Pls
6731 1819 Pls
6743 1632 Pls
6751 1819 Pls
6760 1819 Pls
6769 1819 Pls
6779 1632 Pls
6790 1632 Pls
6801 1819 Pls
6813 1632 Pls
6827 1632 Pls
6839 1632 Pls
6850 2006 Pls
6858 2006 Pls
6865 2006 Pls
6871 1819 Pls
6877 1632 Pls
6882 1632 Pls
6888 2006 Pls
6894 1819 Pls
6899 2193 Pls
6905 1819 Pls
6910 1819 Pls
6915 2193 Pls
6920 2380 Pls
6923 2380 Pls
6927 2006 Pls
6930 2006 Pls
6934 2380 Pls
6937 2754 Pls
6940 2380 Pls
6943 2380 Pls
6945 2754 Pls
6947 2380 Pls
6949 2006 Pls
6952 2754 Pls
6955 2754 Pls
6958 2754 Pls
6961 3128 Pls
6965 2754 Pls
6968 3128 Pls
6972 3314 Pls
6977 3128 Pls
6983 2941 Pls
6988 2941 Pls
6990 2941 Pls
1.000 UL
LTb
1337 4872 N
0 -4361 V
5653 0 V
0 4361 V
-5653 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
