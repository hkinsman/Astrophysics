%!PS-Adobe-2.0 EPSF-2.0
%%Title: Graph2.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Mar 15 09:47:59 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Graph2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (LJMU Astrophysics v2.3DL 2015/16)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 15 09:47:59 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
917 511 M
-63 0 V
stroke
770 511 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
917 1056 M
-63 0 V
stroke
770 1056 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.5)]
] -46.7 MRshow
1.000 UL
LTb
917 1601 M
-63 0 V
stroke
770 1601 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
917 2146 M
-63 0 V
stroke
770 2146 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MRshow
1.000 UL
LTb
917 2692 M
-63 0 V
stroke
770 2692 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
917 3237 M
-63 0 V
stroke
770 3237 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
917 3782 M
-63 0 V
stroke
770 3782 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
917 4327 M
-63 0 V
stroke
770 4327 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
917 4872 M
-63 0 V
stroke
770 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
917 511 M
0 -63 V
stroke
917 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.6)]
] -46.7 MCshow
1.000 UL
LTb
1929 511 M
0 -63 V
stroke
1929 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.4)]
] -46.7 MCshow
1.000 UL
LTb
2941 511 M
0 -63 V
stroke
2941 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MCshow
1.000 UL
LTb
3954 511 M
0 -63 V
stroke
3954 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
4966 511 M
0 -63 V
stroke
4966 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
5978 511 M
0 -63 V
stroke
5978 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
917 4872 N
917 511 L
6073 0 V
0 4361 V
-6073 0 V
Z stroke
LCb setrgbcolor
280 2691 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Y position)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3953 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (X position)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
3954 860 Pls
3936 860 Pls
3918 861 Pls
3881 864 Pls
3850 869 Pls
3807 878 Pls
3748 895 Pls
3665 928 Pls
3578 970 Pls
3493 1018 Pls
3409 1069 Pls
3322 1125 Pls
3228 1187 Pls
3121 1258 Pls
3004 1333 Pls
2892 1404 Pls
2782 1472 Pls
2674 1536 Pls
2567 1599 Pls
2461 1660 Pls
2357 1720 Pls
2255 1778 Pls
2156 1835 Pls
2064 1890 Pls
1979 1942 Pls
1905 1989 Pls
1826 2042 Pls
1736 2106 Pls
1635 2187 Pls
1551 2263 Pls
1491 2328 Pls
1442 2390 Pls
1400 2454 Pls
1366 2524 Pls
1342 2601 Pls
1331 2684 Pls
1340 2772 Pls
1366 2857 Pls
1415 2948 Pls
1490 3044 Pls
1594 3142 Pls
1728 3244 Pls
1865 3332 Pls
2001 3411 Pls
2132 3482 Pls
2251 3545 Pls
2361 3603 Pls
2458 3654 Pls
2541 3699 Pls
2626 3746 Pls
2713 3795 Pls
2808 3850 Pls
2911 3911 Pls
3024 3979 Pls
3146 4054 Pls
3253 4118 Pls
3366 4182 Pls
3476 4237 Pls
3589 4284 Pls
3718 4322 Pls
3823 4338 Pls
3930 4342 Pls
4033 4334 Pls
4141 4313 Pls
4238 4286 Pls
4316 4259 Pls
4400 4226 Pls
4485 4189 Pls
4576 4146 Pls
4674 4098 Pls
4778 4044 Pls
4891 3984 Pls
5015 3917 Pls
5158 3840 Pls
5303 3760 Pls
5444 3683 Pls
5583 3607 Pls
5718 3531 Pls
5851 3455 Pls
5981 3377 Pls
6106 3296 Pls
6226 3211 Pls
6339 3122 Pls
6442 3023 Pls
6528 2913 Pls
6584 2796 Pls
6600 2692 Pls
6590 2611 Pls
6560 2532 Pls
6509 2453 Pls
6425 2363 Pls
6297 2260 Pls
6189 2190 Pls
6083 2127 Pls
5983 2072 Pls
5892 2024 Pls
5810 1982 Pls
5724 1939 Pls
5628 1891 Pls
5520 1837 Pls
5399 1777 Pls
5265 1711 Pls
5113 1638 Pls
4978 1575 Pls
4833 1514 Pls
4688 1459 Pls
4535 1410 Pls
4352 1368 Pls
4205 1347 Pls
4052 1339 Pls
3908 1343 Pls
3767 1357 Pls
3618 1383 Pls
3483 1414 Pls
3335 1456 Pls
3203 1499 Pls
3069 1548 Pls
2937 1600 Pls
2800 1656 Pls
2659 1717 Pls
2514 1783 Pls
2363 1854 Pls
2205 1931 Pls
2059 2005 Pls
1924 2077 Pls
1799 2149 Pls
1684 2220 Pls
1580 2292 Pls
1489 2365 Pls
1412 2441 Pls
1352 2520 Pls
1312 2606 Pls
1299 2703 Pls
1314 2782 Pls
1350 2857 Pls
1403 2929 Pls
1474 3001 Pls
1560 3071 Pls
1661 3142 Pls
1775 3212 Pls
1901 3284 Pls
2038 3356 Pls
2188 3431 Pls
2349 3508 Pls
2525 3588 Pls
2680 3655 Pls
2832 3718 Pls
2994 3781 Pls
3154 3837 Pls
3313 3886 Pls
3475 3927 Pls
3648 3962 Pls
3800 3981 Pls
3918 3990 Pls
4034 3991 Pls
4155 3986 Pls
4283 3973 Pls
4421 3950 Pls
4574 3915 Pls
4766 3856 Pls
4935 3794 Pls
5080 3734 Pls
5219 3673 Pls
5357 3610 Pls
5499 3542 Pls
5637 3475 Pls
5762 3414 Pls
5876 3356 Pls
5980 3302 Pls
6074 3250 Pls
6159 3202 Pls
6230 3158 Pls
6297 3114 Pls
6368 3062 Pls
6439 3002 Pls
6506 2932 Pls
6564 2846 Pls
6601 2740 Pls
6602 2652 Pls
6579 2564 Pls
6532 2477 Pls
6467 2394 Pls
6376 2304 Pls
6259 2210 Pls
6126 2117 Pls
5980 2026 Pls
5823 1936 Pls
5661 1845 Pls
5491 1755 Pls
5318 1664 Pls
5141 1573 Pls
4997 1500 Pls
4868 1437 Pls
4748 1379 Pls
4634 1327 Pls
4526 1281 Pls
4412 1237 Pls
4305 1200 Pls
4202 1171 Pls
4105 1150 Pls
3968 1132 Pls
3858 1130 Pls
3747 1139 Pls
3640 1160 Pls
3527 1193 Pls
3396 1244 Pls
3276 1300 Pls
3160 1361 Pls
3050 1423 Pls
2936 1488 Pls
2812 1559 Pls
2695 1624 Pls
2587 1684 Pls
2486 1738 Pls
2392 1787 Pls
2314 1827 Pls
2241 1865 Pls
2163 1906 Pls
2074 1952 Pls
1977 2004 Pls
1873 2062 Pls
1764 2129 Pls
1650 2206 Pls
1532 2302 Pls
1440 2400 Pls
1374 2500 Pls
1336 2601 Pls
1325 2706 Pls
1343 2810 Pls
1384 2908 Pls
1449 3007 Pls
1536 3105 Pls
1643 3202 Pls
1774 3304 Pls
1883 3378 Pls
2001 3454 Pls
2135 3535 Pls
2267 3613 Pls
2398 3688 Pls
2529 3764 Pls
2660 3840 Pls
2792 3918 Pls
2923 3998 Pls
3055 4080 Pls
3189 4165 Pls
3292 4230 Pls
3387 4289 Pls
3477 4342 Pls
3571 4393 Pls
3660 4435 Pls
3748 4469 Pls
3843 4494 Pls
3908 4504 Pls
3978 4506 Pls
4043 4501 Pls
4111 4488 Pls
4186 4466 Pls
4279 4427 Pls
4371 4380 Pls
4460 4327 Pls
4548 4272 Pls
4639 4211 Pls
4738 4145 Pls
4852 4069 Pls
4962 3998 Pls
5068 3933 Pls
5171 3870 Pls
5272 3811 Pls
5370 3754 Pls
5466 3700 Pls
5556 3650 Pls
5639 3603 Pls
5718 3558 Pls
5805 3508 Pls
5901 3452 Pls
6005 3387 Pls
6119 3311 Pls
6240 3220 Pls
6353 3119 Pls
6444 3018 Pls
6506 2925 Pls
6545 2841 Pls
6563 2775 Pls
6571 2712 Pls
6569 2643 Pls
6553 2567 Pls
6519 2484 Pls
6464 2395 Pls
6386 2303 Pls
6282 2207 Pls
6147 2106 Pls
6007 2015 Pls
5869 1933 Pls
5738 1861 Pls
5618 1796 Pls
5509 1737 Pls
5413 1685 Pls
5332 1640 Pls
5248 1593 Pls
5161 1543 Pls
5067 1486 Pls
4965 1424 Pls
4857 1355 Pls
4741 1281 Pls
4638 1215 Pls
4539 1154 Pls
4435 1094 Pls
4333 1043 Pls
4226 1001 Pls
4122 974 Pls
4029 962 Pls
3936 962 Pls
3845 973 Pls
3750 996 Pls
3673 1021 Pls
3593 1052 Pls
3511 1089 Pls
3427 1130 Pls
3340 1176 Pls
3246 1228 Pls
3145 1285 Pls
3033 1349 Pls
2902 1425 Pls
2766 1503 Pls
2633 1579 Pls
2502 1653 Pls
2372 1727 Pls
2244 1800 Pls
2117 1874 Pls
1991 1949 Pls
1868 2027 Pls
1748 2110 Pls
1632 2198 Pls
1525 2293 Pls
1414 2419 Pls
1347 2536 Pls
1317 2639 Pls
1316 2738 Pls
1341 2829 Pls
1387 2915 Pls
1463 3007 Pls
1562 3096 Pls
1693 3189 Pls
1812 3262 Pls
1928 3326 Pls
2037 3384 Pls
2137 3435 Pls
2224 3480 Pls
2315 3526 Pls
2406 3573 Pls
2508 3624 Pls
2621 3683 Pls
2745 3747 Pls
2886 3819 Pls
3013 3882 Pls
3148 3945 Pls
3282 4001 Pls
3425 4050 Pls
3591 4091 Pls
3728 4111 Pls
3868 4118 Pls
4004 4113 Pls
4141 4096 Pls
4292 4065 Pls
4398 4037 Pls
4519 3999 Pls
4633 3959 Pls
4751 3914 Pls
4873 3864 Pls
5000 3810 Pls
5132 3750 Pls
5271 3686 Pls
5419 3615 Pls
5581 3535 Pls
5733 3458 Pls
5876 3382 Pls
6010 3307 Pls
6136 3232 Pls
6252 3155 Pls
6357 3077 Pls
6450 2995 Pls
6526 2907 Pls
6583 2809 Pls
6607 2706 Pls
6600 2627 Pls
6571 2550 Pls
6518 2469 Pls
6448 2396 Pls
6382 2339 Pls
6304 2281 Pls
6223 2228 Pls
6129 2171 Pls
6022 2111 Pls
5902 2048 Pls
5770 1981 Pls
5626 1911 Pls
5468 1838 Pls
5312 1768 Pls
5160 1704 Pls
4997 1639 Pls
4836 1581 Pls
4673 1529 Pls
4503 1484 Pls
4311 1446 Pls
4152 1426 Pls
4015 1418 Pls
3898 1417 Pls
3786 1422 Pls
3674 1432 Pls
3544 1451 Pls
3392 1482 Pls
3207 1531 Pls
3028 1590 Pls
2875 1648 Pls
2729 1707 Pls
2587 1769 Pls
2443 1834 Pls
2296 1903 Pls
2156 1971 Pls
2029 2034 Pls
1913 2095 Pls
1807 2153 Pls
1712 2209 Pls
1627 2263 Pls
1553 2316 Pls
1493 2363 Pls
1439 2413 Pls
1387 2471 Pls
1341 2541 Pls
1307 2628 Pls
1302 2726 Pls
1326 2816 Pls
1374 2902 Pls
1454 2996 Pls
1565 3095 Pls
1700 3194 Pls
1851 3290 Pls
2012 3383 Pls
2177 3473 Pls
2349 3562 Pls
2526 3651 Pls
2711 3741 Pls
2854 3809 Pls
2990 3871 Pls
3119 3928 Pls
3243 3980 Pls
3373 4029 Pls
3497 4071 Pls
3615 4106 Pls
3730 4132 Pls
3844 4151 Pls
3974 4163 Pls
4108 4161 Pls
4228 4149 Pls
4349 4125 Pls
4475 4088 Pls
4631 4029 Pls
4759 3970 Pls
4883 3909 Pls
5003 3846 Pls
5126 3780 Pls
5258 3710 Pls
5377 3647 Pls
5486 3590 Pls
5588 3538 Pls
5680 3491 Pls
5763 3448 Pls
5840 3408 Pls
5923 3365 Pls
6014 3316 Pls
6111 3259 Pls
6214 3196 Pls
6317 3121 Pls
6422 3031 Pls
6508 2930 Pls
6560 2838 Pls
6586 2746 Pls
6587 2642 Pls
6560 2544 Pls
6510 2446 Pls
6431 2342 Pls
6323 2235 Pls
6180 2120 Pls
6077 2047 Pls
5955 1967 Pls
5810 1879 Pls
5665 1793 Pls
5517 1708 Pls
5370 1624 Pls
5224 1540 Pls
5079 1455 Pls
4934 1369 Pls
4788 1282 Pls
4678 1217 Pls
4577 1158 Pls
4483 1106 Pls
4384 1054 Pls
4291 1011 Pls
4202 976 Pls
4115 949 Pls
4028 932 Pls
3942 925 Pls
3864 928 Pls
3786 940 Pls
3703 963 Pls
3607 1001 Pls
3508 1051 Pls
3410 1107 Pls
3318 1165 Pls
3223 1227 Pls
3121 1294 Pls
3004 1370 Pls
2896 1438 Pls
2794 1500 Pls
2695 1559 Pls
2599 1613 Pls
2508 1665 Pls
2423 1712 Pls
2347 1753 Pls
2267 1797 Pls
2177 1846 Pls
2077 1902 Pls
1969 1966 Pls
1853 2038 Pls
1728 2123 Pls
1591 2233 Pls
1488 2337 Pls
1412 2441 Pls
1364 2539 Pls
1341 2633 Pls
1338 2721 Pls
1348 2790 Pls
1369 2856 Pls
1402 2926 Pls
1452 3002 Pls
1522 3086 Pls
1616 3175 Pls
1737 3270 Pls
1893 3376 Pls
2033 3462 Pls
2161 3535 Pls
2278 3600 Pls
2383 3659 Pls
2476 3710 Pls
2555 3755 Pls
2637 3802 Pls
2726 3854 Pls
2823 3912 Pls
2927 3976 Pls
3035 4045 Pls
3148 4119 Pls
3268 4199 Pls
3363 4261 Pls
3467 4325 Pls
3563 4379 Pls
3659 4424 Pls
3763 4460 Pls
3850 4478 Pls
3940 4484 Pls
4022 4478 Pls
4102 4463 Pls
4183 4439 Pls
4265 4407 Pls
4348 4368 Pls
4430 4326 Pls
4514 4278 Pls
4603 4225 Pls
4700 4167 Pls
4807 4101 Pls
4934 4023 Pls
5060 3947 Pls
5183 3874 Pls
5305 3803 Pls
5426 3733 Pls
5546 3664 Pls
5666 3594 Pls
5785 3525 Pls
5902 3453 Pls
6018 3379 Pls
6132 3302 Pls
6244 3217 Pls
6358 3117 Pls
6454 3013 Pls
6525 2909 Pls
6567 2811 Pls
6586 2715 Pls
6579 2619 Pls
6550 2530 Pls
6497 2437 Pls
6412 2340 Pls
6296 2241 Pls
6161 2147 Pls
6027 2068 Pls
5903 2000 Pls
5787 1938 Pls
5680 1884 Pls
5584 1834 Pls
5504 1793 Pls
5421 1749 Pls
5331 1701 Pls
5230 1647 Pls
5118 1586 Pls
4995 1518 Pls
4872 1451 Pls
4753 1388 Pls
4628 1327 Pls
4503 1274 Pls
4366 1228 Pls
4230 1196 Pls
4106 1181 Pls
3983 1179 Pls
3861 1189 Pls
3726 1212 Pls
3613 1241 Pls
3522 1269 Pls
3423 1303 Pls
3326 1340 Pls
3217 1385 Pls
3108 1433 Pls
2990 1488 Pls
2865 1547 Pls
2732 1612 Pls
2586 1686 Pls
2428 1766 Pls
2277 1844 Pls
2133 1921 Pls
1995 1999 Pls
1863 2076 Pls
1739 2155 Pls
1623 2237 Pls
1517 2323 Pls
1424 2416 Pls
1348 2523 Pls
1321 2580 Pls
1.000 UL
LTb
917 4872 N
917 511 L
6073 0 V
0 4361 V
-6073 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
