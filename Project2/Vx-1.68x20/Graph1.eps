%!PS-Adobe-2.0 EPSF-2.0
%%Title: Graph1.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Mar 15 09:47:59 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Graph1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (LJMU Astrophysics v2.3DL 2015/16)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 15 09:47:59 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1337 511 M
-63 0 V
stroke
1190 511 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.774617)]
] -46.7 MRshow
1.000 UL
LTb
1337 1383 M
-63 0 V
stroke
1190 1383 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.774617)]
] -46.7 MRshow
1.000 UL
LTb
1337 2255 M
-63 0 V
stroke
1190 2255 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.774616)]
] -46.7 MRshow
1.000 UL
LTb
1337 3128 M
-63 0 V
stroke
1190 3128 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.774616)]
] -46.7 MRshow
1.000 UL
LTb
1337 4000 M
-63 0 V
stroke
1190 4000 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.774615)]
] -46.7 MRshow
1.000 UL
LTb
1337 4872 M
-63 0 V
stroke
1190 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.774615)]
] -46.7 MRshow
1.000 UL
LTb
1337 511 M
0 -63 V
stroke
1337 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2750 511 M
0 -63 V
stroke
2750 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
4164 511 M
0 -63 V
stroke
4164 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
5577 511 M
0 -63 V
stroke
5577 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1337 4872 N
0 -4361 V
5653 0 V
0 4361 V
-5653 0 V
Z stroke
LCb setrgbcolor
280 2691 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Jacobi Integral)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4163 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
1337 999 Pls
1338 1837 Pls
1338 1627 Pls
1339 1627 Pls
1340 1837 Pls
1342 2255 Pls
1344 2255 Pls
1347 2255 Pls
1350 2255 Pls
1353 2255 Pls
1356 2255 Pls
1359 2255 Pls
1363 2255 Pls
1367 2360 Pls
1373 2255 Pls
1378 2151 Pls
1383 2255 Pls
1389 2465 Pls
1394 2151 Pls
1400 2255 Pls
1407 2360 Pls
1413 2255 Pls
1420 2674 Pls
1427 2465 Pls
1434 2465 Pls
1440 2360 Pls
1447 2255 Pls
1456 2360 Pls
1467 2465 Pls
1478 2465 Pls
1487 2465 Pls
1496 2465 Pls
1506 2465 Pls
1516 2465 Pls
1528 2569 Pls
1540 2465 Pls
1553 2674 Pls
1566 2465 Pls
1580 2569 Pls
1596 2465 Pls
1611 2465 Pls
1628 2569 Pls
1642 2569 Pls
1654 2674 Pls
1664 2674 Pls
1673 2674 Pls
1681 2674 Pls
1687 2674 Pls
1692 2465 Pls
1697 2569 Pls
1702 2569 Pls
1707 2674 Pls
1713 2674 Pls
1718 2761 Pls
1724 2569 Pls
1728 2569 Pls
1733 2866 Pls
1737 2674 Pls
1742 2465 Pls
1747 2465 Pls
1751 2255 Pls
1754 2255 Pls
1758 2674 Pls
1762 2465 Pls
1766 2866 Pls
1769 2465 Pls
1772 2465 Pls
1776 2761 Pls
1779 2569 Pls
1784 2761 Pls
1788 2674 Pls
1793 2569 Pls
1799 2465 Pls
1807 2465 Pls
1815 2465 Pls
1823 2569 Pls
1832 2465 Pls
1841 2465 Pls
1851 2465 Pls
1862 2465 Pls
1874 2465 Pls
1887 2569 Pls
1902 2569 Pls
1918 2465 Pls
1937 2569 Pls
1958 2465 Pls
1977 2465 Pls
1993 2569 Pls
2008 2569 Pls
2023 2569 Pls
2041 2569 Pls
2062 2569 Pls
2076 2465 Pls
2088 2465 Pls
2099 2569 Pls
2107 2569 Pls
2114 2674 Pls
2122 2465 Pls
2129 2674 Pls
2137 2465 Pls
2145 2569 Pls
2154 2465 Pls
2163 2465 Pls
2171 2465 Pls
2178 2360 Pls
2186 2569 Pls
2193 2569 Pls
2202 2866 Pls
2208 2761 Pls
2215 2674 Pls
2222 2569 Pls
2228 2569 Pls
2235 2866 Pls
2241 2866 Pls
2249 2674 Pls
2255 2569 Pls
2262 2465 Pls
2269 2465 Pls
2277 2569 Pls
2286 2360 Pls
2295 2465 Pls
2306 2360 Pls
2318 2465 Pls
2330 2465 Pls
2343 2569 Pls
2356 2569 Pls
2370 2674 Pls
2384 2761 Pls
2399 2674 Pls
2416 2674 Pls
2433 2674 Pls
2452 2674 Pls
2474 2674 Pls
2492 2761 Pls
2508 2674 Pls
2525 2761 Pls
2540 2761 Pls
2556 2761 Pls
2570 2674 Pls
2585 2761 Pls
2599 2761 Pls
2612 2761 Pls
2625 2866 Pls
2637 2866 Pls
2650 2866 Pls
2660 2971 Pls
2669 2866 Pls
2679 2866 Pls
2687 2866 Pls
2696 2866 Pls
2704 2761 Pls
2712 2761 Pls
2719 2761 Pls
2725 2761 Pls
2730 2761 Pls
2736 2761 Pls
2742 2866 Pls
2749 2971 Pls
2756 2971 Pls
2766 2866 Pls
2775 2761 Pls
2783 2761 Pls
2792 2866 Pls
2801 2866 Pls
2810 2866 Pls
2821 2674 Pls
2831 2761 Pls
2841 2761 Pls
2851 2761 Pls
2861 2866 Pls
2870 2866 Pls
2879 2866 Pls
2888 2866 Pls
2899 2971 Pls
2912 2866 Pls
2927 2866 Pls
2945 2866 Pls
2967 2971 Pls
2984 2971 Pls
3001 2866 Pls
3018 2866 Pls
3034 2866 Pls
3050 2971 Pls
3066 2971 Pls
3082 2971 Pls
3096 3075 Pls
3109 3075 Pls
3122 3075 Pls
3133 3075 Pls
3144 2971 Pls
3154 3075 Pls
3162 2866 Pls
3168 3075 Pls
3174 2866 Pls
3179 2674 Pls
3184 2866 Pls
3189 2971 Pls
3193 2866 Pls
3197 2761 Pls
3201 2866 Pls
3206 2674 Pls
3211 3075 Pls
3215 2674 Pls
3219 2674 Pls
3224 2674 Pls
3229 2674 Pls
3234 2674 Pls
3240 2465 Pls
3245 2465 Pls
3250 2360 Pls
3257 2360 Pls
3263 2674 Pls
3270 2465 Pls
3276 2360 Pls
3282 2465 Pls
3287 2255 Pls
3293 2465 Pls
3299 2465 Pls
3306 2360 Pls
3314 2360 Pls
3324 2255 Pls
3335 2255 Pls
3348 2465 Pls
3364 2465 Pls
3381 2465 Pls
3398 2360 Pls
3414 2360 Pls
3431 2465 Pls
3447 2360 Pls
3462 2360 Pls
3477 2360 Pls
3491 2360 Pls
3505 2465 Pls
3520 2360 Pls
3530 2360 Pls
3540 2255 Pls
3550 2151 Pls
3559 2255 Pls
3567 2255 Pls
3575 2151 Pls
3582 2151 Pls
3589 2151 Pls
3595 2465 Pls
3601 2360 Pls
3607 2465 Pls
3611 2465 Pls
3615 2674 Pls
3618 2255 Pls
3622 2465 Pls
3625 2465 Pls
3628 2255 Pls
3631 2255 Pls
3633 2255 Pls
3636 2674 Pls
3638 2674 Pls
3640 2674 Pls
3643 2866 Pls
3646 2674 Pls
3649 2866 Pls
3652 2866 Pls
3656 3075 Pls
3659 2866 Pls
3663 2971 Pls
3668 3285 Pls
3673 3075 Pls
3678 2971 Pls
3684 3075 Pls
3689 3180 Pls
3694 3180 Pls
3700 3075 Pls
3706 3075 Pls
3711 2866 Pls
3716 2971 Pls
3723 2761 Pls
3730 2761 Pls
3739 2866 Pls
3749 2674 Pls
3762 2674 Pls
3777 2569 Pls
3791 2569 Pls
3805 2569 Pls
3817 2569 Pls
3827 2674 Pls
3836 2674 Pls
3846 2674 Pls
3857 2761 Pls
3870 2761 Pls
3883 2761 Pls
3897 2761 Pls
3911 2761 Pls
3927 2674 Pls
3940 2674 Pls
3952 2674 Pls
3962 2674 Pls
3970 2761 Pls
3978 2674 Pls
3984 2569 Pls
3988 2674 Pls
3993 2674 Pls
3998 2674 Pls
4003 2674 Pls
4008 2761 Pls
4013 2761 Pls
4018 2971 Pls
4022 3285 Pls
4026 3075 Pls
4030 3075 Pls
4034 3285 Pls
4038 3285 Pls
4042 3285 Pls
4045 3703 Pls
4048 3494 Pls
4052 3703 Pls
4055 3913 Pls
4058 3913 Pls
4061 3703 Pls
4064 3703 Pls
4067 3913 Pls
4070 3913 Pls
4074 4227 Pls
4079 4017 Pls
4083 4122 Pls
4090 4331 Pls
4096 4122 Pls
4103 4122 Pls
4111 4122 Pls
4119 4227 Pls
4127 4122 Pls
4136 3913 Pls
4146 4017 Pls
4157 3913 Pls
4168 4122 Pls
4182 4017 Pls
4196 4017 Pls
4216 4017 Pls
4236 4122 Pls
4253 4017 Pls
4270 4122 Pls
4287 4122 Pls
4302 4122 Pls
4319 4227 Pls
4336 4227 Pls
4354 4122 Pls
4367 4122 Pls
4379 4122 Pls
4389 4122 Pls
4397 4227 Pls
4404 4227 Pls
4411 4122 Pls
4418 4122 Pls
4425 4331 Pls
4432 4017 Pls
4439 4122 Pls
4447 4331 Pls
4454 4122 Pls
4460 4122 Pls
4467 4331 Pls
4473 4017 Pls
4481 4227 Pls
4486 4017 Pls
4492 4227 Pls
4498 4227 Pls
4504 4122 Pls
4511 4227 Pls
4516 4541 Pls
4521 4122 Pls
4526 4227 Pls
4532 4331 Pls
4538 4227 Pls
4545 4122 Pls
4553 3913 Pls
4561 3913 Pls
4570 3913 Pls
4581 3913 Pls
4593 4122 Pls
4605 4122 Pls
4617 4227 Pls
4631 4227 Pls
4645 4122 Pls
4660 4122 Pls
4676 4227 Pls
4694 4122 Pls
4715 4227 Pls
4737 4331 Pls
4755 4227 Pls
4772 4227 Pls
4790 4227 Pls
4806 4331 Pls
4819 4331 Pls
4831 4331 Pls
4842 4331 Pls
4854 4331 Pls
4866 4331 Pls
4878 4331 Pls
4889 4331 Pls
4901 4331 Pls
4913 4541 Pls
4924 4541 Pls
4933 4541 Pls
4943 4227 Pls
4952 4227 Pls
4961 4331 Pls
4970 4331 Pls
4979 4227 Pls
4987 4122 Pls
4993 4436 Pls
4999 4122 Pls
5004 4122 Pls
5010 4122 Pls
5016 4331 Pls
5024 4436 Pls
5033 4227 Pls
5043 4227 Pls
5052 4227 Pls
5060 4331 Pls
5069 4436 Pls
5079 4331 Pls
5090 4227 Pls
5101 4122 Pls
5113 4331 Pls
5124 4227 Pls
5135 4227 Pls
5147 4331 Pls
5158 4331 Pls
5169 4331 Pls
5179 4331 Pls
5190 4227 Pls
5203 4331 Pls
5218 4122 Pls
5237 4227 Pls
5258 4331 Pls
5277 4227 Pls
5295 4331 Pls
5314 4227 Pls
5333 4122 Pls
5351 4331 Pls
5368 4331 Pls
5383 4331 Pls
5396 4122 Pls
5409 4122 Pls
5421 4227 Pls
5432 4122 Pls
5440 4017 Pls
5447 3913 Pls
5454 4017 Pls
5460 4017 Pls
5466 3808 Pls
5471 3808 Pls
5477 4017 Pls
5481 4017 Pls
5486 4017 Pls
5492 3913 Pls
5497 3808 Pls
5502 3808 Pls
5507 3913 Pls
5513 3703 Pls
5520 3703 Pls
5526 3599 Pls
5532 3703 Pls
5538 3703 Pls
5544 3703 Pls
5552 3703 Pls
5560 3703 Pls
5567 3599 Pls
5574 3494 Pls
5581 3703 Pls
5587 3703 Pls
5593 3703 Pls
5601 3494 Pls
5609 3703 Pls
5619 3808 Pls
5631 3808 Pls
5644 3913 Pls
5661 3913 Pls
5679 3913 Pls
5695 3913 Pls
5711 3808 Pls
5728 3913 Pls
5745 3913 Pls
5760 3913 Pls
5777 3808 Pls
5793 3808 Pls
5810 3808 Pls
5820 3703 Pls
5831 3913 Pls
5842 3913 Pls
5853 3913 Pls
5862 3913 Pls
5871 3808 Pls
5879 3808 Pls
5887 3808 Pls
5893 3913 Pls
5900 4017 Pls
5905 4017 Pls
5909 3913 Pls
5912 3913 Pls
5916 3913 Pls
5919 3913 Pls
5923 3703 Pls
5926 3703 Pls
5929 3703 Pls
5932 3703 Pls
5934 3703 Pls
5937 3913 Pls
5940 3913 Pls
5943 3913 Pls
5947 3913 Pls
5951 3913 Pls
5954 3913 Pls
5958 3913 Pls
5963 3913 Pls
5968 3913 Pls
5973 4017 Pls
5978 4017 Pls
5983 4017 Pls
5988 4227 Pls
5994 4122 Pls
5999 4122 Pls
6004 4227 Pls
6009 4122 Pls
6015 4122 Pls
6023 4017 Pls
6032 4227 Pls
6042 4331 Pls
6054 4227 Pls
6070 4331 Pls
6086 4227 Pls
6101 4227 Pls
6116 4122 Pls
6129 4331 Pls
6142 4227 Pls
6152 4331 Pls
6162 4227 Pls
6172 4331 Pls
6183 4227 Pls
6195 4227 Pls
6208 4331 Pls
6222 4331 Pls
6237 4331 Pls
6249 4331 Pls
6259 4541 Pls
6267 4331 Pls
6274 4541 Pls
6279 4541 Pls
6284 4645 Pls
6289 4541 Pls
6293 4541 Pls
6298 4541 Pls
6303 4436 Pls
6308 4331 Pls
6313 4436 Pls
6318 4122 Pls
6322 4541 Pls
6326 4541 Pls
6330 4122 Pls
6333 4122 Pls
6337 4122 Pls
6340 3913 Pls
6343 4122 Pls
6345 4122 Pls
6348 4331 Pls
6351 4331 Pls
6354 4331 Pls
6357 4122 Pls
6360 4541 Pls
6363 4541 Pls
6366 4331 Pls
6370 4436 Pls
6375 4436 Pls
6381 4331 Pls
6386 4436 Pls
6393 4122 Pls
6399 4227 Pls
6406 4331 Pls
6413 4122 Pls
6421 4331 Pls
6429 4331 Pls
6438 4331 Pls
6448 4331 Pls
6459 4331 Pls
6471 4227 Pls
6485 4227 Pls
6501 4227 Pls
6517 4227 Pls
6532 4227 Pls
6548 4122 Pls
6564 4017 Pls
6579 4122 Pls
6594 4017 Pls
6611 4122 Pls
6629 4017 Pls
6645 4122 Pls
6659 4017 Pls
6671 4122 Pls
6681 4122 Pls
6689 4122 Pls
6696 4122 Pls
6702 4122 Pls
6707 4017 Pls
6713 4331 Pls
6719 4122 Pls
6725 4122 Pls
6732 4227 Pls
6738 4331 Pls
6744 4227 Pls
6749 4122 Pls
6755 4227 Pls
6761 4017 Pls
6766 3913 Pls
6771 4017 Pls
6776 4227 Pls
6781 3913 Pls
6787 3808 Pls
6791 4017 Pls
6795 4122 Pls
6799 4122 Pls
6804 4227 Pls
6809 4122 Pls
6814 4227 Pls
6820 4122 Pls
6826 4227 Pls
6833 4122 Pls
6842 4122 Pls
6852 4017 Pls
6862 4122 Pls
6873 4331 Pls
6885 4227 Pls
6897 4227 Pls
6910 4227 Pls
6924 4331 Pls
6940 4436 Pls
6958 4331 Pls
6978 4331 Pls
6990 4227 Pls
1.000 UL
LTb
1337 4872 N
0 -4361 V
5653 0 V
0 4361 V
-5653 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
