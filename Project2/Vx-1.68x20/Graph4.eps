%!PS-Adobe-2.0 EPSF-2.0
%%Title: Graph4.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Mar 15 09:47:59 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Graph4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (LJMU Astrophysics v2.3DL 2015/16)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 15 09:47:59 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1001 511 M
-63 0 V
stroke
854 511 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.05)]
] -46.7 MRshow
1.000 UL
LTb
1001 947 M
-63 0 V
stroke
854 947 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
1001 1383 M
-63 0 V
stroke
854 1383 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.15)]
] -46.7 MRshow
1.000 UL
LTb
1001 1819 M
-63 0 V
stroke
854 1819 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
1001 2255 M
-63 0 V
stroke
854 2255 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.25)]
] -46.7 MRshow
1.000 UL
LTb
1001 2692 M
-63 0 V
stroke
854 2692 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MRshow
1.000 UL
LTb
1001 3128 M
-63 0 V
stroke
854 3128 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.35)]
] -46.7 MRshow
1.000 UL
LTb
1001 3564 M
-63 0 V
stroke
854 3564 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
1001 4000 M
-63 0 V
stroke
854 4000 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.45)]
] -46.7 MRshow
1.000 UL
LTb
1001 4436 M
-63 0 V
stroke
854 4436 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
1001 4872 M
-63 0 V
stroke
854 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.55)]
] -46.7 MRshow
1.000 UL
LTb
1001 511 M
0 -63 V
stroke
1001 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2498 511 M
0 -63 V
stroke
2498 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
3996 511 M
0 -63 V
stroke
3996 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
5493 511 M
0 -63 V
stroke
5493 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1001 4872 N
0 -4361 V
5989 0 V
0 4361 V
-5989 0 V
Z stroke
LCb setrgbcolor
280 2691 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Radius)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3995 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
1001 834 Pls
1002 835 Pls
1002 835 Pls
1004 842 Pls
1005 849 Pls
1006 866 Pls
1008 896 Pls
1011 952 Pls
1015 1027 Pls
1018 1114 Pls
1021 1210 Pls
1025 1319 Pls
1029 1444 Pls
1033 1596 Pls
1039 1770 Pls
1044 1944 Pls
1050 2118 Pls
1056 2296 Pls
1062 2473 Pls
1068 2651 Pls
1075 2828 Pls
1082 3003 Pls
1089 3172 Pls
1096 3332 Pls
1103 3478 Pls
1110 3606 Pls
1117 3743 Pls
1127 3896 Pls
1139 4070 Pls
1150 4215 Pls
1160 4319 Pls
1170 4405 Pls
1180 4477 Pls
1191 4537 Pls
1203 4582 Pls
1216 4602 Pls
1230 4592 Pls
1244 4551 Pls
1259 4472 Pls
1275 4347 Pls
1291 4172 Pls
1309 3939 Pls
1324 3699 Pls
1337 3458 Pls
1348 3227 Pls
1357 3015 Pls
1365 2822 Pls
1372 2652 Pls
1377 2511 Pls
1383 2365 Pls
1388 2222 Pls
1393 2070 Pls
1399 1909 Pls
1405 1745 Pls
1411 1579 Pls
1415 1448 Pls
1420 1324 Pls
1425 1223 Pls
1430 1142 Pls
1435 1081 Pls
1439 1058 Pls
1443 1061 Pls
1447 1089 Pls
1452 1142 Pls
1455 1206 Pls
1459 1270 Pls
1462 1347 Pls
1466 1433 Pls
1470 1533 Pls
1474 1647 Pls
1479 1778 Pls
1485 1927 Pls
1491 2099 Pls
1499 2305 Pls
1507 2523 Pls
1516 2740 Pls
1525 2958 Pls
1535 3177 Pls
1546 3394 Pls
1558 3609 Pls
1570 3818 Pls
1584 4022 Pls
1599 4213 Pls
1617 4390 Pls
1637 4539 Pls
1659 4637 Pls
1679 4667 Pls
1696 4650 Pls
1712 4598 Pls
1728 4509 Pls
1747 4359 Pls
1769 4129 Pls
1784 3938 Pls
1797 3749 Pls
1808 3573 Pls
1817 3415 Pls
1825 3276 Pls
1832 3133 Pls
1840 2977 Pls
1849 2807 Pls
1857 2624 Pls
1867 2435 Pls
1876 2238 Pls
1884 2079 Pls
1892 1929 Pls
1900 1802 Pls
1908 1693 Pls
1917 1603 Pls
1924 1562 Pls
1931 1552 Pls
1938 1572 Pls
1945 1616 Pls
1952 1689 Pls
1959 1776 Pls
1967 1890 Pls
1974 2007 Pls
1981 2138 Pls
1989 2280 Pls
1997 2438 Pls
2006 2610 Pls
2016 2797 Pls
2027 3002 Pls
2040 3225 Pls
2053 3441 Pls
2066 3646 Pls
2080 3841 Pls
2095 4023 Pls
2110 4190 Pls
2126 4338 Pls
2144 4465 Pls
2162 4564 Pls
2182 4630 Pls
2205 4650 Pls
2224 4623 Pls
2242 4562 Pls
2259 4473 Pls
2276 4352 Pls
2292 4209 Pls
2308 4043 Pls
2323 3860 Pls
2338 3662 Pls
2352 3453 Pls
2365 3234 Pls
2379 3008 Pls
2392 2775 Pls
2403 2584 Pls
2413 2409 Pls
2422 2238 Pls
2432 2087 Pls
2441 1954 Pls
2449 1843 Pls
2458 1750 Pls
2466 1695 Pls
2472 1669 Pls
2477 1660 Pls
2483 1668 Pls
2490 1695 Pls
2497 1748 Pls
2505 1831 Pls
2515 1971 Pls
2525 2125 Pls
2533 2278 Pls
2542 2442 Pls
2552 2619 Pls
2562 2815 Pls
2573 3019 Pls
2584 3214 Pls
2594 3397 Pls
2605 3570 Pls
2615 3730 Pls
2625 3876 Pls
2635 4001 Pls
2644 4119 Pls
2656 4244 Pls
2669 4370 Pls
2685 4490 Pls
2704 4596 Pls
2727 4662 Pls
2746 4666 Pls
2764 4627 Pls
2782 4548 Pls
2799 4437 Pls
2816 4283 Pls
2833 4089 Pls
2849 3866 Pls
2865 3628 Pls
2879 3375 Pls
2892 3117 Pls
2904 2856 Pls
2916 2598 Pls
2926 2345 Pls
2934 2148 Pls
2941 1982 Pls
2947 1833 Pls
2953 1702 Pls
2958 1586 Pls
2963 1476 Pls
2967 1385 Pls
2972 1311 Pls
2976 1255 Pls
2982 1204 Pls
2986 1187 Pls
2991 1195 Pls
2995 1226 Pls
3000 1283 Pls
3006 1377 Pls
3011 1487 Pls
3017 1613 Pls
3022 1750 Pls
3028 1902 Pls
3035 2082 Pls
3042 2262 Pls
3049 2437 Pls
3055 2605 Pls
3062 2766 Pls
3067 2901 Pls
3073 3029 Pls
3079 3168 Pls
3087 3325 Pls
3096 3498 Pls
3106 3684 Pls
3118 3879 Pls
3132 4079 Pls
3149 4283 Pls
3166 4440 Pls
3184 4549 Pls
3201 4609 Pls
3219 4621 Pls
3236 4586 Pls
3252 4510 Pls
3268 4395 Pls
3283 4244 Pls
3298 4059 Pls
3313 3832 Pls
3324 3647 Pls
3335 3442 Pls
3345 3215 Pls
3355 2990 Pls
3364 2769 Pls
3372 2551 Pls
3380 2337 Pls
3387 2125 Pls
3394 1921 Pls
3400 1723 Pls
3406 1532 Pls
3410 1393 Pls
3414 1273 Pls
3418 1169 Pls
3421 1070 Pls
3425 991 Pls
3428 927 Pls
3431 879 Pls
3434 860 Pls
3436 852 Pls
3439 858 Pls
3441 878 Pls
3444 915 Pls
3447 979 Pls
3451 1060 Pls
3454 1154 Pls
3458 1258 Pls
3461 1374 Pls
3466 1511 Pls
3471 1678 Pls
3476 1847 Pls
3481 2016 Pls
3487 2183 Pls
3493 2351 Pls
3498 2518 Pls
3504 2681 Pls
3510 2837 Pls
3516 2980 Pls
3522 3117 Pls
3529 3269 Pls
3536 3435 Pls
3546 3616 Pls
3557 3811 Pls
3570 4021 Pls
3586 4214 Pls
3601 4370 Pls
3615 4474 Pls
3629 4541 Pls
3639 4573 Pls
3648 4588 Pls
3659 4585 Pls
3671 4560 Pls
3684 4506 Pls
3698 4415 Pls
3713 4284 Pls
3728 4107 Pls
3745 3877 Pls
3759 3631 Pls
3771 3388 Pls
3782 3159 Pls
3791 2947 Pls
3799 2757 Pls
3805 2589 Pls
3810 2451 Pls
3815 2309 Pls
3820 2164 Pls
3825 2010 Pls
3830 1851 Pls
3836 1688 Pls
3841 1524 Pls
3846 1389 Pls
3850 1272 Pls
3854 1164 Pls
3858 1076 Pls
3863 1007 Pls
3866 965 Pls
3870 951 Pls
3873 960 Pls
3877 989 Pls
3880 1040 Pls
3883 1095 Pls
3887 1163 Pls
3890 1241 Pls
3893 1330 Pls
3897 1430 Pls
3901 1547 Pls
3905 1679 Pls
3911 1832 Pls
3917 2021 Pls
3924 2225 Pls
3932 2430 Pls
3940 2637 Pls
3948 2847 Pls
3957 3058 Pls
3967 3269 Pls
3977 3479 Pls
3988 3688 Pls
4001 3893 Pls
4015 4092 Pls
4030 4275 Pls
4051 4470 Pls
4072 4590 Pls
4090 4645 Pls
4108 4650 Pls
4126 4611 Pls
4142 4533 Pls
4160 4402 Pls
4178 4227 Pls
4197 3995 Pls
4211 3781 Pls
4224 3574 Pls
4234 3381 Pls
4243 3206 Pls
4251 3057 Pls
4258 2903 Pls
4265 2752 Pls
4272 2590 Pls
4280 2418 Pls
4287 2238 Pls
4296 2052 Pls
4303 1900 Pls
4310 1756 Pls
4317 1634 Pls
4324 1533 Pls
4331 1453 Pls
4338 1418 Pls
4344 1414 Pls
4350 1439 Pls
4356 1491 Pls
4363 1578 Pls
4368 1654 Pls
4374 1754 Pls
4380 1859 Pls
4386 1981 Pls
4393 2115 Pls
4400 2264 Pls
4408 2428 Pls
4416 2610 Pls
4426 2813 Pls
4438 3043 Pls
4450 3267 Pls
4463 3484 Pls
4476 3694 Pls
4490 3893 Pls
4505 4080 Pls
4521 4251 Pls
4539 4403 Pls
4558 4528 Pls
4580 4621 Pls
4603 4658 Pls
4622 4643 Pls
4640 4591 Pls
4659 4495 Pls
4676 4375 Pls
4689 4260 Pls
4703 4127 Pls
4715 3992 Pls
4727 3837 Pls
4739 3664 Pls
4752 3476 Pls
4765 3276 Pls
4777 3067 Pls
4790 2851 Pls
4801 2651 Pls
4811 2473 Pls
4822 2296 Pls
4831 2142 Pls
4840 2007 Pls
4850 1891 Pls
4860 1792 Pls
4868 1740 Pls
4875 1716 Pls
4881 1714 Pls
4886 1725 Pls
4892 1751 Pls
4899 1798 Pls
4907 1876 Pls
4917 2001 Pls
4927 2152 Pls
4936 2302 Pls
4946 2462 Pls
4955 2633 Pls
4966 2819 Pls
4977 3023 Pls
4989 3228 Pls
5001 3423 Pls
5013 3607 Pls
5025 3780 Pls
5037 3940 Pls
5049 4084 Pls
5061 4212 Pls
5072 4316 Pls
5083 4411 Pls
5097 4503 Pls
5113 4588 Pls
5133 4649 Pls
5155 4661 Pls
5175 4623 Pls
5194 4543 Pls
5214 4411 Pls
5234 4228 Pls
5253 4008 Pls
5271 3763 Pls
5287 3510 Pls
5302 3253 Pls
5315 2996 Pls
5328 2739 Pls
5340 2483 Pls
5348 2296 Pls
5356 2125 Pls
5363 1975 Pls
5369 1839 Pls
5375 1709 Pls
5381 1599 Pls
5387 1508 Pls
5392 1436 Pls
5397 1381 Pls
5403 1343 Pls
5408 1333 Pls
5414 1349 Pls
5419 1392 Pls
5425 1461 Pls
5432 1581 Pls
5439 1705 Pls
5445 1844 Pls
5451 1994 Pls
5459 2162 Pls
5467 2357 Pls
5474 2544 Pls
5482 2722 Pls
5490 2891 Pls
5497 3051 Pls
5504 3196 Pls
5510 3332 Pls
5518 3480 Pls
5527 3641 Pls
5538 3816 Pls
5550 3998 Pls
5564 4183 Pls
5582 4365 Pls
5601 4514 Pls
5618 4599 Pls
5635 4640 Pls
5653 4636 Pls
5671 4587 Pls
5687 4496 Pls
5704 4356 Pls
5722 4169 Pls
5740 3922 Pls
5751 3745 Pls
5762 3538 Pls
5774 3292 Pls
5785 3048 Pls
5795 2802 Pls
5805 2563 Pls
5813 2330 Pls
5821 2105 Pls
5828 1888 Pls
5835 1679 Pls
5840 1531 Pls
5844 1402 Pls
5848 1291 Pls
5852 1183 Pls
5856 1095 Pls
5859 1023 Pls
5862 967 Pls
5866 929 Pls
5869 910 Pls
5872 910 Pls
5875 926 Pls
5878 962 Pls
5881 1024 Pls
5885 1108 Pls
5889 1209 Pls
5893 1317 Pls
5897 1439 Pls
5901 1579 Pls
5907 1752 Pls
5912 1920 Pls
5918 2085 Pls
5923 2248 Pls
5929 2410 Pls
5935 2567 Pls
5940 2714 Pls
5945 2845 Pls
5951 2985 Pls
5957 3142 Pls
5965 3317 Pls
5975 3508 Pls
5985 3710 Pls
5999 3925 Pls
6016 4160 Pls
6032 4333 Pls
6048 4461 Pls
6064 4541 Pls
6078 4579 Pls
6092 4584 Pls
6102 4566 Pls
6113 4530 Pls
6124 4474 Pls
6135 4391 Pls
6148 4271 Pls
6162 4111 Pls
6177 3906 Pls
6193 3634 Pls
6205 3391 Pls
6215 3169 Pls
6224 2965 Pls
6231 2781 Pls
6237 2622 Pls
6242 2486 Pls
6247 2346 Pls
6252 2197 Pls
6257 2037 Pls
6263 1872 Pls
6268 1705 Pls
6273 1539 Pls
6278 1375 Pls
6282 1255 Pls
6287 1137 Pls
6290 1044 Pls
6294 969 Pls
6298 910 Pls
6301 883 Pls
6304 878 Pls
6307 894 Pls
6310 926 Pls
6313 975 Pls
6316 1038 Pls
6319 1115 Pls
6322 1199 Pls
6326 1295 Pls
6329 1406 Pls
6334 1532 Pls
6338 1681 Pls
6344 1866 Pls
6351 2057 Pls
6357 2249 Pls
6364 2444 Pls
6371 2641 Pls
6379 2840 Pls
6387 3040 Pls
6396 3241 Pls
6406 3441 Pls
6416 3639 Pls
6427 3834 Pls
6440 4028 Pls
6455 4225 Pls
6472 4392 Pls
6489 4518 Pls
6505 4596 Pls
6522 4631 Pls
6538 4626 Pls
6554 4582 Pls
6571 4493 Pls
6589 4349 Pls
6607 4147 Pls
6625 3907 Pls
6640 3670 Pls
6652 3448 Pls
6662 3241 Pls
6671 3053 Pls
6678 2885 Pls
6684 2747 Pls
6690 2608 Pls
6696 2460 Pls
6703 2302 Pls
6709 2132 Pls
6716 1958 Pls
6723 1798 Pls
6729 1660 Pls
6735 1531 Pls
6741 1426 Pls
6747 1339 Pls
6753 1285 Pls
6758 1264 Pls
6763 1272 Pls
6769 1306 Pls
6774 1373 Pls
6779 1448 Pls
6783 1519 Pls
6788 1608 Pls
6793 1703 Pls
6798 1819 Pls
6803 1944 Pls
6810 2087 Pls
6816 2248 Pls
6824 2426 Pls
6833 2631 Pls
6844 2862 Pls
6855 3087 Pls
6866 3310 Pls
6878 3528 Pls
6891 3740 Pls
6905 3942 Pls
6920 4133 Pls
6937 4309 Pls
6956 4464 Pls
6978 4591 Pls
6990 4635 Pls
1.000 UL
LTb
1001 4872 N
0 -4361 V
5989 0 V
0 4361 V
-5989 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
