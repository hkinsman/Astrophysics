%!PS-Adobe-2.0 EPSF-2.0
%%Title: Graph3.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Mar 15 09:47:59 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Graph3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (LJMU Astrophysics v2.3DL 2015/16)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar 15 09:47:59 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
917 511 M
-63 0 V
stroke
770 511 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.6)]
] -46.7 MRshow
1.000 UL
LTb
917 1238 M
-63 0 V
stroke
770 1238 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.4)]
] -46.7 MRshow
1.000 UL
LTb
917 1965 M
-63 0 V
stroke
770 1965 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MRshow
1.000 UL
LTb
917 2692 M
-63 0 V
stroke
770 2692 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
917 3418 M
-63 0 V
stroke
770 3418 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
917 4145 M
-63 0 V
stroke
770 4145 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
917 4872 M
-63 0 V
stroke
770 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
917 511 M
0 -63 V
stroke
917 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MCshow
1.000 UL
LTb
1676 511 M
0 -63 V
stroke
1676 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.15)]
] -46.7 MCshow
1.000 UL
LTb
2435 511 M
0 -63 V
stroke
2435 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.1)]
] -46.7 MCshow
1.000 UL
LTb
3194 511 M
0 -63 V
stroke
3194 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.05)]
] -46.7 MCshow
1.000 UL
LTb
3954 511 M
0 -63 V
stroke
3954 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
4713 511 M
0 -63 V
stroke
4713 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.05)]
] -46.7 MCshow
1.000 UL
LTb
5472 511 M
0 -63 V
stroke
5472 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
1.000 UL
LTb
6231 511 M
0 -63 V
stroke
6231 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.15)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
917 4872 N
917 511 L
6073 0 V
0 4361 V
-6073 0 V
Z stroke
LCb setrgbcolor
280 2691 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (dY/dT)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3953 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (dX/dT)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
5274 2692 Pls
5274 2638 Pls
5273 2582 Pls
5270 2468 Pls
5267 2375 Pls
5258 2250 Pls
5242 2084 Pls
5212 1870 Pls
5171 1681 Pls
5123 1528 Pls
5066 1412 Pls
5001 1327 Pls
4924 1272 Pls
4830 1250 Pls
4722 1269 Pls
4615 1322 Pls
4509 1400 Pls
4407 1496 Pls
4310 1608 Pls
4218 1732 Pls
4134 1863 Pls
4060 1998 Pls
3998 2135 Pls
3949 2267 Pls
3913 2390 Pls
3890 2498 Pls
3876 2616 Pls
3875 2749 Pls
3897 2899 Pls
3941 3021 Pls
3991 3107 Pls
4052 3175 Pls
4124 3229 Pls
4209 3269 Pls
4309 3289 Pls
4418 3283 Pls
4532 3244 Pls
4632 3172 Pls
4720 3058 Pls
4786 2896 Pls
4808 2684 Pls
4775 2415 Pls
4691 2150 Pls
4571 1895 Pls
4430 1659 Pls
4280 1452 Pls
4133 1273 Pls
3993 1124 Pls
3870 1007 Pls
3739 897 Pls
3606 799 Pls
3460 710 Pls
3301 640 Pls
3134 600 Pls
2959 609 Pls
2819 664 Pls
2680 777 Pls
2560 938 Pls
2453 1151 Pls
2352 1441 Pls
2288 1697 Pls
2238 1968 Pls
2204 2224 Pls
2183 2477 Pls
2179 2685 Pls
2182 2837 Pls
2192 2982 Pls
2209 3109 Pls
2236 3225 Pls
2271 3323 Pls
2318 3403 Pls
2375 3461 Pls
2444 3494 Pls
2532 3496 Pls
2627 3466 Pls
2718 3410 Pls
2807 3335 Pls
2891 3244 Pls
2965 3144 Pls
3030 3036 Pls
3081 2926 Pls
3115 2819 Pls
3131 2720 Pls
3128 2636 Pls
3103 2581 Pls
3065 2574 Pls
3038 2618 Pls
3029 2687 Pls
3038 2786 Pls
3074 2917 Pls
3158 3104 Pls
3322 3362 Pls
3481 3559 Pls
3653 3740 Pls
3824 3899 Pls
3987 4033 Pls
4137 4144 Pls
4297 4249 Pls
4476 4354 Pls
4678 4451 Pls
4899 4533 Pls
5138 4587 Pls
5393 4596 Pls
5605 4556 Pls
5812 4463 Pls
5997 4322 Pls
6164 4126 Pls
6328 3843 Pls
6431 3588 Pls
6509 3314 Pls
6556 3056 Pls
6579 2809 Pls
6577 2566 Pls
6556 2364 Pls
6510 2166 Pls
6451 2017 Pls
6375 1890 Pls
6284 1790 Pls
6175 1714 Pls
6049 1664 Pls
5903 1641 Pls
5740 1646 Pls
5557 1681 Pls
5378 1738 Pls
5206 1809 Pls
5042 1890 Pls
4887 1973 Pls
4743 2057 Pls
4609 2134 Pls
4483 2201 Pls
4365 2253 Pls
4247 2284 Pls
4116 2283 Pls
4005 2254 Pls
3890 2203 Pls
3767 2135 Pls
3627 2052 Pls
3472 1957 Pls
3301 1856 Pls
3112 1755 Pls
2912 1657 Pls
2698 1570 Pls
2478 1502 Pls
2250 1459 Pls
2021 1454 Pls
1839 1485 Pls
1676 1551 Pls
1526 1660 Pls
1403 1804 Pls
1304 1982 Pls
1231 2194 Pls
1186 2453 Pls
1172 2697 Pls
1181 2894 Pls
1205 3092 Pls
1248 3299 Pls
1312 3512 Pls
1403 3728 Pls
1530 3946 Pls
1728 4172 Pls
1937 4317 Pls
2141 4397 Pls
2353 4432 Pls
2581 4427 Pls
2828 4380 Pls
3081 4297 Pls
3313 4194 Pls
3527 4076 Pls
3721 3953 Pls
3894 3827 Pls
4048 3705 Pls
4174 3594 Pls
4289 3484 Pls
4404 3361 Pls
4518 3229 Pls
4620 3092 Pls
4708 2954 Pls
4772 2833 Pls
4801 2774 Pls
4817 2750 Pls
4833 2758 Pls
4851 2794 Pls
4883 2857 Pls
4933 2946 Pls
5003 3049 Pls
5089 3158 Pls
5192 3263 Pls
5306 3356 Pls
5426 3428 Pls
5546 3471 Pls
5663 3474 Pls
5750 3441 Pls
5818 3382 Pls
5873 3297 Pls
5915 3190 Pls
5945 3063 Pls
5967 2902 Pls
5976 2726 Pls
5971 2534 Pls
5958 2337 Pls
5917 2037 Pls
5868 1786 Pls
5801 1535 Pls
5722 1301 Pls
5621 1079 Pls
5484 862 Pls
5338 713 Pls
5183 618 Pls
5021 574 Pls
4845 575 Pls
4646 622 Pls
4451 708 Pls
4271 816 Pls
4102 937 Pls
3949 1066 Pls
3824 1183 Pls
3712 1298 Pls
3595 1429 Pls
3472 1582 Pls
3346 1759 Pls
3228 1954 Pls
3123 2168 Pls
3044 2396 Pls
3003 2642 Pls
3017 2846 Pls
3076 3005 Pls
3166 3116 Pls
3279 3180 Pls
3398 3194 Pls
3509 3166 Pls
3606 3098 Pls
3683 2994 Pls
3732 2859 Pls
3750 2687 Pls
3739 2546 Pls
3706 2393 Pls
3650 2225 Pls
3575 2066 Pls
3490 1919 Pls
3393 1786 Pls
3292 1671 Pls
3185 1579 Pls
3077 1518 Pls
2973 1494 Pls
2873 1518 Pls
2803 1577 Pls
2743 1667 Pls
2695 1787 Pls
2654 1950 Pls
2624 2139 Pls
2604 2356 Pls
2593 2618 Pls
2595 2813 Pls
2602 3024 Pls
2616 3217 Pls
2637 3418 Pls
2669 3624 Pls
2719 3854 Pls
2780 4040 Pls
2848 4182 Pls
2924 4283 Pls
3011 4348 Pls
3111 4378 Pls
3234 4367 Pls
3355 4317 Pls
3474 4240 Pls
3589 4143 Pls
3698 4031 Pls
3803 3909 Pls
3899 3780 Pls
3984 3651 Pls
4055 3528 Pls
4117 3407 Pls
4177 3270 Pls
4231 3116 Pls
4275 2947 Pls
4301 2761 Pls
4294 2559 Pls
4245 2372 Pls
4158 2224 Pls
4057 2126 Pls
3947 2068 Pls
3858 2044 Pls
3768 2037 Pls
3671 2050 Pls
3566 2089 Pls
3463 2159 Pls
3369 2270 Pls
3298 2422 Pls
3260 2621 Pls
3272 2874 Pls
3334 3134 Pls
3433 3383 Pls
3551 3612 Pls
3679 3815 Pls
3808 3989 Pls
3929 4135 Pls
4034 4248 Pls
4148 4357 Pls
4268 4457 Pls
4398 4549 Pls
4538 4625 Pls
4685 4671 Pls
4836 4675 Pls
4962 4633 Pls
5074 4547 Pls
5182 4406 Pls
5273 4221 Pls
5355 3981 Pls
5419 3715 Pls
5463 3461 Pls
5493 3203 Pls
5511 2960 Pls
5519 2719 Pls
5516 2544 Pls
5507 2378 Pls
5488 2230 Pls
5464 2104 Pls
5431 1996 Pls
5388 1906 Pls
5337 1839 Pls
5273 1796 Pls
5191 1783 Pls
5101 1806 Pls
5012 1858 Pls
4924 1932 Pls
4840 2024 Pls
4764 2130 Pls
4696 2245 Pls
4641 2368 Pls
4599 2493 Pls
4576 2618 Pls
4574 2740 Pls
4596 2846 Pls
4658 2944 Pls
4737 2982 Pls
4811 2967 Pls
4875 2909 Pls
4916 2812 Pls
4930 2684 Pls
4905 2504 Pls
4834 2289 Pls
4696 2026 Pls
4538 1800 Pls
4366 1594 Pls
4192 1412 Pls
4022 1257 Pls
3868 1133 Pls
3705 1015 Pls
3539 910 Pls
3355 812 Pls
3150 729 Pls
2933 673 Pls
2698 660 Pls
2499 697 Pls
2305 789 Pls
2130 930 Pls
1971 1128 Pls
1816 1408 Pls
1716 1666 Pls
1637 1941 Pls
1584 2203 Pls
1552 2459 Pls
1543 2719 Pls
1550 2886 Pls
1573 3054 Pls
1608 3192 Pls
1656 3314 Pls
1719 3415 Pls
1795 3495 Pls
1886 3552 Pls
1993 3584 Pls
2118 3591 Pls
2264 3567 Pls
2409 3520 Pls
2551 3456 Pls
2686 3381 Pls
2812 3300 Pls
2930 3219 Pls
3040 3142 Pls
3140 3075 Pls
3234 3024 Pls
3333 3000 Pls
3434 3015 Pls
3524 3058 Pls
3623 3125 Pls
3752 3223 Pls
3891 3331 Pls
4019 3427 Pls
4165 3531 Pls
4312 3629 Pls
4482 3734 Pls
4673 3839 Pls
4884 3940 Pls
5110 4028 Pls
5350 4095 Pls
5598 4132 Pls
5827 4130 Pls
6030 4087 Pls
6226 3999 Pls
6393 3871 Pls
6535 3702 Pls
6651 3489 Pls
6744 3212 Pls
6790 2962 Pls
6805 2737 Pls
6800 2542 Pls
6782 2358 Pls
6747 2175 Pls
6689 1973 Pls
6597 1756 Pls
6450 1525 Pls
6269 1347 Pls
6090 1236 Pls
5897 1169 Pls
5689 1140 Pls
5464 1148 Pls
5218 1193 Pls
4975 1270 Pls
4746 1366 Pls
4535 1474 Pls
4341 1588 Pls
4165 1704 Pls
4008 1818 Pls
3873 1925 Pls
3762 2018 Pls
3662 2107 Pls
3562 2201 Pls
3462 2297 Pls
3364 2386 Pls
3279 2445 Pls
3214 2462 Pls
3153 2448 Pls
3079 2401 Pls
2988 2324 Pls
2876 2226 Pls
2748 2123 Pls
2610 2025 Pls
2467 1942 Pls
2320 1881 Pls
2176 1851 Pls
2037 1861 Pls
1940 1901 Pls
1860 1969 Pls
1795 2062 Pls
1744 2179 Pls
1705 2330 Pls
1682 2502 Pls
1675 2690 Pls
1681 2893 Pls
1703 3109 Pls
1747 3372 Pls
1814 3647 Pls
1893 3892 Pls
1992 4122 Pls
2116 4337 Pls
2296 4552 Pls
2467 4678 Pls
2646 4749 Pls
2836 4772 Pls
3040 4750 Pls
3270 4679 Pls
3481 4579 Pls
3676 4461 Pls
3853 4333 Pls
4013 4201 Pls
4151 4074 Pls
4275 3948 Pls
4403 3806 Pls
4533 3643 Pls
4659 3461 Pls
4775 3262 Pls
4867 3050 Pls
4927 2826 Pls
4934 2624 Pls
4899 2485 Pls
4840 2391 Pls
4754 2331 Pls
4666 2320 Pls
4582 2349 Pls
4508 2420 Pls
4456 2533 Pls
4435 2693 Pls
4444 2811 Pls
4474 2947 Pls
4530 3104 Pls
4605 3253 Pls
4694 3390 Pls
4792 3507 Pls
4895 3600 Pls
4998 3661 Pls
5098 3684 Pls
5192 3659 Pls
5258 3603 Pls
5309 3517 Pls
5352 3407 Pls
5388 3254 Pls
5411 3080 Pls
5425 2883 Pls
5429 2666 Pls
5423 2431 Pls
5406 2187 Pls
5382 1961 Pls
5347 1742 Pls
5303 1523 Pls
5238 1296 Pls
5157 1102 Pls
5066 956 Pls
4971 862 Pls
4864 807 Pls
4743 792 Pls
4597 822 Pls
4458 888 Pls
4325 978 Pls
4198 1085 Pls
4078 1204 Pls
3966 1329 Pls
3867 1455 Pls
3783 1571 Pls
3700 1699 Pls
3615 1847 Pls
3531 2016 Pls
3457 2205 Pls
3398 2411 Pls
3367 2633 Pls
3386 2883 Pls
3451 3071 Pls
3553 3212 Pls
3676 3302 Pls
3805 3348 Pls
3931 3357 Pls
4028 3341 Pls
4119 3306 Pls
4207 3249 Pls
4292 3162 Pls
4366 3040 Pls
4418 2876 Pls
4435 2666 Pls
4400 2395 Pls
4329 2158 Pls
4237 1946 Pls
4137 1759 Pls
4034 1597 Pls
3937 1461 Pls
3849 1351 Pls
3753 1245 Pls
3647 1142 Pls
3530 1043 Pls
3404 961 Pls
3275 903 Pls
3143 884 Pls
3011 915 Pls
2913 987 Pls
2818 1115 Pls
2739 1282 Pls
2674 1490 Pls
2616 1759 Pls
2581 2006 Pls
2555 2274 Pls
2543 2514 Pls
2540 2737 Pls
2548 2950 Pls
2563 3141 Pls
2586 3310 Pls
2616 3448 Pls
2655 3564 Pls
2702 3656 Pls
2760 3724 Pls
2832 3764 Pls
2921 3770 Pls
3014 3740 Pls
3106 3680 Pls
3197 3599 Pls
3284 3500 Pls
3366 3387 Pls
3439 3263 Pls
3501 3131 Pls
3550 2995 Pls
3583 2857 Pls
3598 2719 Pls
3591 2583 Pls
3553 2448 Pls
3483 2343 Pls
3392 2276 Pls
3295 2254 Pls
3196 2272 Pls
3105 2331 Pls
3035 2425 Pls
2988 2565 Pls
2979 2758 Pls
3027 3006 Pls
3138 3281 Pls
3285 3538 Pls
3448 3765 Pls
3618 3967 Pls
3786 4141 Pls
3944 4286 Pls
4081 4398 Pls
4224 4502 Pls
4380 4601 Pls
4553 4690 Pls
4745 4761 Pls
4948 4798 Pls
5142 4787 Pls
5315 4728 Pls
5482 4614 Pls
5633 4448 Pls
5772 4219 Pls
5888 3953 Pls
5971 3691 Pls
6035 3424 Pls
6079 3166 Pls
6106 2897 Pls
6114 2692 Pls
6109 2542 Pls
6096 2397 Pls
6073 2272 Pls
6037 2155 Pls
5993 2059 Pls
5935 1981 Pls
5863 1925 Pls
5778 1892 Pls
5677 1886 Pls
5560 1910 Pls
5443 1959 Pls
5331 2026 Pls
5224 2105 Pls
5126 2191 Pls
5038 2279 Pls
4959 2364 Pls
4893 2441 Pls
4837 2503 Pls
4784 2537 Pls
4758 2538 Pls
1.000 UL
LTb
917 4872 N
917 511 L
6073 0 V
0 4361 V
-6073 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
